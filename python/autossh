#!/usr/bin/env python

import os
import sys
import pexpect
import time
import struct
import fcntl
import termios
import signal

def sigwinch_passthrough (sig, data):
    # Check for buggy platforms (see pexpect.setwinsize()).
    if 'TIOCGWINSZ' in dir(termios):
        TIOCGWINSZ = termios.TIOCGWINSZ
    else:
        TIOCGWINSZ = 1074295912 # assume
    s = struct.pack ("HHHH", 0, 0, 0, 0)
    a = struct.unpack ('HHHH', fcntl.ioctl(sys.stdout.fileno(), TIOCGWINSZ , s))
    global global_pexpect_instance
    global_pexpect_instance.setwinsize(a[0],a[1])


def getwinsize():
    """This returns the window size of the child tty.
    The return value is a tuple of (rows, cols).
    """
    if 'TIOCGWINSZ' in dir(termios):
        TIOCGWINSZ = termios.TIOCGWINSZ
    else:
        TIOCGWINSZ = 1074295912L # Assume
    s = struct.pack('HHHH', 0, 0, 0, 0)
    x = fcntl.ioctl(sys.stdout.fileno(), TIOCGWINSZ, s)
    return struct.unpack('HHHH', x)[0:2]


user = 'root'
port = '22';
protocal = 'ssh'

config =  {
    'server':{
        'host':'111.111.111.111',
        'pass':'12345',
        'port':'2345'
    },
}



if len(sys.argv) > 1 and sys.argv[1] in config:
    server = config[sys.argv[1]];

    if 'protocal' in server:
        protocal = server['protocal'];

    if 'port' in server:
        port = server['port'];

    if 'user' in server:
        user = server['user']

    if 'host' in server:
        host = server['host'];


    if protocal == 'ssh':
        ssh = pexpect.spawn('ssh %s@%s -p %s' % (user, host, port));

        global global_pexpect_instance;
        global_pexpect_instance = ssh;

        signal.signal(signal.SIGWINCH, sigwinch_passthrough)
        winsize = getwinsize();
        ssh.setwinsize(winsize[0], winsize[1])

        i = ssh.expect (['password:', 'yes/no'], timeout=3)
    
        if i == 0:
            ssh.sendline(server['pass']);
        elif i == 1:
            ssh.sendline('yes\n');
            ssh.expect('password:', timeout=3);
            ssh.sendline(server['pass']);

        ssh.interact();

    else:
        for i in server:
            print i,server[i]

else:
    for i in config:
        print i;
